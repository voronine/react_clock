{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerTime","handleContextMenu","event","preventDefault","props","setHasClock","handleClick","window","addEventListener","this","removeEventListener","setInterval","newTime","console","info","toUTCString","slice","setState","prevProps","clockName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerForName","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,UAAY,EALd,EAkCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IApC3B,EAuCEC,YAAc,SAACJ,GACbA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IAzC3B,uDAOE,WAAqB,IAAD,OAClBE,OAAOC,iBAAiB,cAAeC,KAAKR,mBAC5CM,OAAOG,oBAAoB,QAASD,KAAKH,aAEzCG,KAAKT,UAAYO,OAAOI,aAAY,WAClC,IAAMC,EAAU,IAAIb,KAGpBc,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAC/C,EAAKC,SAAS,CAAEnB,KAAMc,MACrB,OAjBP,gCAoBE,SAAmBM,GACbA,EAAUC,YAAcV,KAAKL,MAAMe,WAErCN,QAAQO,MAAR,uBAA8BF,EAAUC,UAAxC,eAAwDV,KAAKL,MAAMe,cAvBzE,kCA2BE,WACEZ,OAAOC,iBAAiB,QAASC,KAAKH,aACtCC,OAAOG,oBAAoB,cAAeD,KAAKR,mBAE/CoB,cAAcZ,KAAKT,aA/BvB,oBA4CE,WACE,OACE,sBAAKsB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKL,MAAMe,YAGb,YAED,sBAAMG,UAAU,cAAhB,SACGb,KAAKZ,MAAMC,KAAKiB,cAAcC,OAAO,IAAK,YAtDrD,GAA2BO,IAAMC,WCPjC,SAASC,IACP,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAQX,IAAMG,EAAb,4MACEhC,MAAQ,CACNiC,UAAU,EACVX,UAAW,WAHf,EAMEY,aAAe,EANjB,uDAQE,WAA2B,IAAD,OACxBtB,KAAKsB,aAAexB,OAAOI,aAAY,WACrC,EAAKM,SAAS,CACZE,UAAWM,QAEZ,QAbP,kCAgBE,WACEJ,cAAcZ,KAAKsB,gBAjBvB,oBAoBE,WAAU,IAAD,OACP,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECb,KAAKZ,MAAMiC,UACV,cAAC,EAAD,CACEzB,YAAa,SAACyB,GAAD,OAAc,EAAKb,SAAS,CAAEa,cAC3CX,UAAWV,KAAKZ,MAAMsB,mBA5BlC,GAAyBI,IAAMC,WCZ/BQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e63bbcfe.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  setHasClock: (hasClock: boolean) => void;\n  clockName: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerTime = 0;\n\n  componentDidMount() {\n    window.addEventListener('contextmenu', this.handleContextMenu);\n    window.removeEventListener('click', this.handleClick);\n\n    this.timerTime = window.setInterval(() => {\n      const newTime = new Date();\n\n      // eslint-disable-next-line no-console\n      console.info(newTime.toUTCString().slice(-12, -4));\n      this.setState({ time: newTime });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.addEventListener('click', this.handleClick);\n    window.removeEventListener('contextmenu', this.handleContextMenu);\n\n    clearInterval(this.timerTime);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(false);\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(true);\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerForName = 0;\n\n  componentDidMount(): void {\n    this.timerForName = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerForName);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            setHasClock={(hasClock) => this.setState({ hasClock })}\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}